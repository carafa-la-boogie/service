
# You can use this file to easily send requests to your API.
# Prerequisite: humao.rest-client Vscode plugin (already present on codespace)
# High-level overview of REST API concepts used here: https://www.packtpub.com/en-us/learning/how-to-tutorials/what-are-rest-verbs-and-status-codes-tutorial?srsltid=AfmBOoppDqtkhRxj5BLZONRZFzRDmh6eP-xyTo6H4OuEHYuVbrg1d4Dm


# Requests for API endpoints of the sample project:

### Hello world endpoint: get response "Hello, Stranger!"
GET http://localhost:8080/users



POST http://localhost:8080/users
Content-Type: application/json
{
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe@example.com"
}

### Hello world with a request param passed.
# When sending the request it will ask you for the name
# hitting enter will avoid passing the param, and do the default behaviour above
# @prompt name The name to display in response
GET http://localhost:8080/hello-world
    ?name={{name}}

### Save a greeting to database
@postGreetingId = 1001
@postGreetingContent = Hello!
POST http://localhost:8080/users
Content-Type: application/json


{
    "id": "3",
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe@example.com"
}


### Get all greetings
GET http://localhost:8080/greetings

### Get info for greeting with given content
# @prompt content Greeting content to look for, defaults to "Overview"
GET http://localhost:8080/info
    ?title={{content}}

### Update an existing greeting
@putGreetingId = 1001
@putGreetingContent = Hello again!
PUT http://localhost:8080/greetings/{{putGreetingId}}
Content-Type: application/json

{
    "content": "{{putGreetingContent}}"
}

### Delete greeting
@deleteGreetingId = 1001
DELETE http://localhost:8080/greetings/{{deleteGreetingId}}


# TODO add requests for your own endpoints!
### Get all users
GET http://localhost:8080/users

### Get a user by their email
GET http://localhost:8080/users/john.doe@example.com

### Create a new user
POST http://localhost:8080/users
Content-Type: application/json

{
    "id": "1",
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe@example.com"
}

### Update an existing user
PUT http://localhost:8080/users/1
Content-Type: application/json

{
    "id": "1",
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe.updated@example.com"
}

### Patch an existing user
PATCH http://localhost:8080/users/1
Content-Type: application/json

{
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe.patched@example.com"
}

### Delete a user by ID
DELETE http://localhost:8080/users/

### Friendship Endpoints ###

### Get all friendships
GET http://localhost:8080/friendships

### Get a friendship by first friend (John Doe with id 1)
GET http://localhost:8080/friendships/first-friend/1

### Get a friendship by second friend (John Doe with id 2)
GET http://localhost:8080/friendships/second-friend/2

### Create a new friendship between John Doe with id 1 and John Doe with id 2
POST http://localhost:8080/friendships
Content-Type: application/json

{
    "id": "2",
    "firstFriendId": "1",
    "secondFriendId": "2",
    "friendshipStartDate": "2025-03-22"
}

### Update an existing friendship (between John Doe with id 1 and John Doe with id 2)
PUT http://localhost:8080/friendships/
Content-Type: application/json

{
    "firstFriendId": "1",
    "secondFriendId": "2",
    "friendshipStartDate": "2025-03-22",
    "friendshipStatus": "Updated"
}

### Patch an existing friendship (partially update) between John Doe with id 1 and John Doe with id 2
PATCH http://localhost:8080/friendships/1
Content-Type: application/json

{
    "friendshipStatus": "Updated"
}

### Delete a friendship by ID (between John Doe with id 1 and John Doe with id 2)
DELETE http://localhost:8080/friendships/1

### Find a friendship by first friend (John Doe with id 1)
GET http://localhost:8080/friendships/first-friend/1

### Find a friendship by second friend (John Doe with id 2)
GET http://localhost:8080/friendships/second-friend/2

### Delete a friendship by ID (John Doe with id 1 and John Doe with id 2)
DELETE http://localhost:8080/friendships/1