
# You can use this file to easily send requests to your API.
# Prerequisite: humao.rest-client Vscode plugin (already present on codespace)
# High-level overview of REST API concepts used here: https://www.packtpub.com/en-us/learning/how-to-tutorials/what-are-rest-verbs-and-status-codes-tutorial?srsltid=AfmBOoppDqtkhRxj5BLZONRZFzRDmh6eP-xyTo6H4OuEHYuVbrg1d4Dm


# Requests for API endpoints of the sample project:

### Get all users
GET http://localhost:8080/users

### Get a user by their email
GET http://localhost:8080/users/john.doe@example.com

### Create a new user
POST http://localhost:8080/users
Content-Type: application/json

{
    "id": "1",
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe@example.com"
}

### Update an existing user
PUT http://localhost:8080/users/1
Content-Type: application/json

{
    "id": "1",
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe.updated@example.com"
}

### Patch an existing user
PATCH http://localhost:8080/users/1
Content-Type: application/json

{
    "firstName": "John",
    "lastName": "Doe",
    "birthday": "1990-01-01",
    "email": "john.doe.patched@example.com"
}

### Delete a user by ID
DELETE http://localhost:8080/users/

### Friendship Endpoints ###

### Get all friendships
GET http://localhost:8080/friendships

### Get a friendship by first friend (John Doe with id 1)
GET http://localhost:8080/friendships/first-friend/1

### Get a friendship by second friend (John Doe with id 2)
GET http://localhost:8080/friendships/second-friend/2

### Create a new friendship between John Doe with id 1 and John Doe with id 2
POST http://localhost:8080/friendships
Content-Type: application/json

{
    "id": "3",
    "firstFriend": "1",
    "secondFriend": "3",
    "friendshipAniversary": "2025-03-22"
}

### Update an existing friendship (between John Doe with id 1 and John Doe with id 2)
PUT http://localhost:8080/friendships/
Content-Type: application/json

{
    "firstFriend": "1",
    "secondFriend": "2",
    "friendshipAniversary": "2025-03-23"
}

### Patch an existing friendship (partially update) between John Doe with id 1 and John Doe with id 2
PATCH http://localhost:8080/friendships/1
Content-Type: application/json

{
    "friendshipStatus": "Updated"
}

### Delete a friendship by ID (between John Doe with id 1 and John Doe with id 2)
DELETE http://localhost:8080/friendships/1

### Find a friendship by first friend (John Doe with id 1)
GET http://localhost:8080/friendships/first-friend/1

### Find a friendship by second friend (John Doe with id 2)
GET http://localhost:8080/friendships/second-friend/2

### Delete a friendship by ID (John Doe with id 1 and John Doe with id 2)
DELETE http://localhost:8080/friendships/2

### Gift Ideas Endpoints ###

### Get a gift idea by its ID
GET http://localhost:8080/gift-ideas/1

### Get all gift ideas
GET http://localhost:8080/gift-ideas

### Create a new gift idea
POST http://localhost:8080/gift-ideas
Content-Type: application/json

{
    "id": "1",
    "giftName": "Bluetooth Speaker",
    "giftLink": "https://example.com/bluetooth-speaker",
    "giftGiver": "1",
    "giftReceiver": "2"  
}

### Update an existing gift idea
PUT http://localhost:8080/gift-ideas/1
Content-Type: application/json

{
    "giftName": "Smartwatch",
    "giftLink": "https://example.com/smartwatch",
    "giftGiver": "1",
    "giftReceiver": "2"
}

### Patch an existing gift idea
PATCH http://localhost:8080/gift-ideas/1
Content-Type: application/json

{
    "giftName": "Wireless Earbuds"
}

### Delete a gift idea by its ID
DELETE http://localhost:8080/gift-ideas/1